{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aazub\\\\Desktop\\\\OpsLyft Project\\\\covid-tracker\\\\covid-tracker_client\\\\src\\\\Global.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Bar } from 'react-chartjs-2'; // import { Chart as ChartJS, registerables } from 'chart.js';\n// import { Chart } from 'react-chartjs-2'\n// ChartJS.register(...registerables);\n\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Global() {\n  _s();\n\n  const [data, setData] = useState(\"Data should show here\");\n\n  function global_data() {\n    fetch(\"http://localhost:9000/covid_data/Global\").then(res => res.json()).then(json => {\n      setData(json);\n    });\n  } // const graph_data = [{ time: ['1st January 2020', 'Page B', 'Page C'], active: data.Active, recovered: data.Recovered, deaths: data.Deaths }];\n\n\n  const graph_data = [{\n    name: 'Page A',\n    uv: 400,\n    pv: 2400,\n    amt: 2400\n  }, {\n    name: 'Page B',\n    uv: 300,\n    pv: 1398,\n    amt: 2210\n  }, {\n    name: 'Page C',\n    uv: 200,\n    pv: 9800,\n    amt: 2290\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"from\",\n        className: \"text-dark\",\n        children: \"From\\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"date\",\n        name: \"birthday\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"to\",\n        className: \"text-dark\",\n        children: \"\\xA0\\xA0\\xA0 To\\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"date\",\n        name: \"birthday\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-outline-success\",\n      type: \"submit\",\n      onClick: global_data,\n      children: \"Search Global Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Active: \", data.Active, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 39\n      }, this), \"Recovered: \", data.Recovered, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 45\n      }, this), \"Deaths: \", data.Deaths, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"90%\",\n        marginLeft: \"37%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          width: 600,\n          height: 300,\n          data: graph_data,\n          margin: {\n            top: 5,\n            right: 20,\n            bottom: 5,\n            left: 0\n          },\n          children: [/*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"uv\",\n            stroke: \"#8884d8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n            stroke: \"#ccc\",\n            strokeDasharray: \"5 5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Global, \"kHn6x5ZlSwi1AykJze/Yc/ZxUWs=\");\n\n_c = Global;\nexport default Global;\n\nvar _c;\n\n$RefreshReg$(_c, \"Global\");","map":{"version":3,"sources":["C:/Users/aazub/Desktop/OpsLyft Project/covid-tracker/covid-tracker_client/src/Global.js"],"names":["useState","Bar","LineChart","Line","CartesianGrid","XAxis","YAxis","Global","data","setData","global_data","fetch","then","res","json","graph_data","name","uv","pv","amt","Active","Recovered","Deaths","width","marginLeft","top","right","bottom","left"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport { Bar } from 'react-chartjs-2';\r\n// import { Chart as ChartJS, registerables } from 'chart.js';\r\n// import { Chart } from 'react-chartjs-2'\r\n// ChartJS.register(...registerables);\r\n\r\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis } from 'recharts';\r\n\r\n\r\n\r\nfunction Global() {\r\n\r\n    const [data, setData] = useState(\"Data should show here\");\r\n\r\n    function global_data() {\r\n        fetch(\"http://localhost:9000/covid_data/Global\")\r\n            .then((res) => res.json())\r\n            .then(json => { setData(json) });\r\n    }\r\n\r\n    // const graph_data = [{ time: ['1st January 2020', 'Page B', 'Page C'], active: data.Active, recovered: data.Recovered, deaths: data.Deaths }];\r\n\r\n    const graph_data = [{ name: 'Page A', uv: 400, pv: 2400, amt: 2400 },\r\n    { name: 'Page B', uv: 300, pv: 1398, amt: 2210 },\r\n    { name: 'Page C', uv: 200, pv: 9800, amt: 2290 },\r\n    ];\r\n\r\n    return (\r\n\r\n        <div >\r\n            <div className=\"nav-item\">\r\n                <label for=\"from\" className=\"text-dark\">\r\n                    From&nbsp;\r\n                </label>\r\n                <input type=\"date\" id=\"date\" name=\"birthday\" />\r\n\r\n                <label for=\"to\" className=\"text-dark\">\r\n                    &nbsp;&nbsp;&nbsp; To&nbsp;\r\n                </label>\r\n                <input type=\"date\" id=\"date\" name=\"birthday\" />\r\n            </div>\r\n\r\n            <br />\r\n\r\n            <button className=\"btn btn-outline-success\" type=\"submit\" onClick={global_data}>Search Global Data</button>\r\n\r\n            <p>\r\n                Active: {data.Active} <br />\r\n                Recovered: {data.Recovered} <br />\r\n                Deaths: {data.Deaths} <br />\r\n            </p>\r\n\r\n            <div style={{ width: \"90%\", marginLeft: \"37%\" }}>\r\n                <div>\r\n                    {/* <LineChart width={600} height={300} data={graph_data}>\r\n                        <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" />\r\n                        <CartesianGrid stroke=\"#ccc\" />\r\n                        <XAxis dataKey=\"name\" />\r\n                        <YAxis />\r\n                    </LineChart> */}\r\n\r\n                    {/* <LineChart width={500} height={300} data={graph_data}>\r\n                        <XAxis dataKey=\"time\" />\r\n                        <YAxis />\r\n                        <CartesianGrid stroke=\"#eee\" strokeDasharray=\"5 5\" />\r\n                        <Line type=\"monotone\" dataKey=\"active\" stroke=\"#8884d8\" />\r\n                        <Line type=\"monotone\" dataKey=\"recovered\" stroke=\"#82ca0d\" />\r\n                        <Line type=\"monotone\" dataKey=\"deaths\" stroke=\"#82ca9d\" />\r\n                    </LineChart> */}\r\n\r\n                    <LineChart width={600} height={300} data={graph_data} margin={{ top: 5, right: 20, bottom: 5, left: 0 }}>\r\n                        <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" />\r\n                        <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n                        <XAxis dataKey=\"name\" />\r\n                        <YAxis />\r\n                    </LineChart>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        </div>);\r\n}\r\n\r\nexport default Global;"]},"metadata":{},"sourceType":"module"}