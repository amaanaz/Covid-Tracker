{"ast":null,"code":"import _slicedToArray from\"C:/Users/aazub/Desktop/OpsLyft Project/covid-tracker/covid-tracker_client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useRef,useState}from\"react\";import{LineChart,Line,CartesianGrid,XAxis,YAxis,Tooltip,Legend}from'recharts';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Global(){var _useState=useState(\"Data should show here\"),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),active=_useState4[0],setActive=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),recovered=_useState6[0],setRecover=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),deaths=_useState8[0],setDeath=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),graph_data=_useState10[0],setGraph=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),time=_useState12[0],setTime=_useState12[1];function global_data(){// fetch(\"http://localhost:9000/covid_data/Global\")\nfetch(\"https://evening-fjord-72925.herokuapp.com/covid_data/Global\").then(function(res){return res.json();}).then(function(json){setData(json);});// console.log(data.Active);\nsetActive([parseInt(data.Active/5),parseInt(data.Active/4),parseInt(data.Active/3),parseInt(data.Active/3),parseInt(data.Active/4)]);setRecover([\"Missing Data\",\"Missing Data\",\"Missing Data\",\"Missing Data\",\"Missing Data\"]);setDeath([parseInt(data.Deaths*9),parseInt(data.Deaths*2),parseInt(data.Deaths*3),parseInt(data.Deaths*5),parseInt(data.Deaths*1)]);setTime(['2020-01-01','2020-06-01','2021-01-01','2021-06-01','2022-01-01']);setGraph([{time:time[0],Active:active[0],Recovered:recovered[0],Deaths:deaths[0]},{time:time[1],Active:active[1],Recovered:recovered[1],Deaths:deaths[1]},{time:time[2],Active:active[2],Recovered:recovered[2],Deaths:deaths[2]},{time:time[3],Active:active[3],Recovered:recovered[3],Deaths:deaths[3]},{time:time[4],Active:active[4],Recovered:recovered[4],Deaths:deaths[4]}]);}var from=useRef(null);var to=useRef(null);function data_calc(){// TODO: change graph based on selected date range\nvar dateFrom=new Date(from.current.valueAsDate);var dateTo=new Date(to.current.valueAsDate);// console.log(\"Date diff (time):\" + Math.abs(dateTo - dateFrom));\nvar diffDays=Math.ceil(Math.abs(dateTo-dateFrom)/(1000*60*60*24));console.log(\"Date diff (days):\"+diffDays);var newDate=new Date(dateFrom);// let addedDate = Math.ceil(Math.abs(dateTo.setDate(dateTo.getDate() + 79)) / (1000 * 60 * 60 * 24));\nconsole.log(\"Date (added):\"+newDate.setDate(newDate.getDate()+79));console.log(\"Date (added):\"+newDate);var fromDateStr=from.current.value.split(\"-\");var toDateStr=to.current.value.split(\"-\");console.log(to.current.value,toDateStr);if(from.current.value===\"\"||to.current.value===\"\"){alert(\"Please enter Dates\");}else if(parseInt(toDateStr[0])<parseInt(fromDateStr[0])){alert(\"Invalid date range\");}else if(diffDays<153){alert(\"Please select a date range more than 5 months\");}else{var toDateStrCalc=toDateStr[2]+10;var fromDateStrCalc=fromDateStr[2]+10;setActive([Math.abs(parseInt(data.Active/(toDateStrCalc-5))),Math.abs(parseInt(data.Active/(fromDateStrCalc-2))),Math.abs(parseInt(data.Active/(toDateStrCalc-6))),Math.abs(parseInt(data.Active/(fromDateStrCalc-1))),Math.abs(parseInt(data.Active/(toDateStrCalc-8)))]);setRecover([\"Missing Data\",\"Missing Data\",\"Missing Data\",\"Missing Data\",\"Missing Data\"]);setDeath([Math.abs(parseInt(data.Deaths/(toDateStrCalc-8))),Math.abs(parseInt(data.Deaths/(fromDateStrCalc-2))),Math.abs(parseInt(data.Deaths/(toDateStrCalc-9))),Math.abs(parseInt(data.Deaths/(fromDateStrCalc-1))),Math.abs(parseInt(data.Deaths/(toDateStrCalc-7)))]);// console.log(dateTo.getDate() + \"-\" + dateTo.getUTCMonth() + \"-\" + dateTo.getFullYear());\n// console.log(dateTo.toDateString());\nvar dates=[\"\"];for(var i=1;i<4;i++){dates[i]=new Date(dateFrom);dates[i].setDate(dates[i].getDate()+diffDays/5*i);dates.push(dates[i].toDateString());console.log(dates[i].toDateString());}// console.log(dates[1]);\nsetTime([dateFrom.toDateString(),dates[1].toDateString(),dates[2].toDateString(),dates[3].toDateString(),dateTo.toDateString()]);setGraph([{time:time[0],Active:active[0],Recovered:recovered[0],Deaths:deaths[0]},{time:time[1],Active:active[1],Recovered:recovered[1],Deaths:deaths[1]},{time:time[2],Active:active[2],Recovered:recovered[2],Deaths:deaths[2]},{time:time[3],Active:active[3],Recovered:recovered[3],Deaths:deaths[3]},{time:time[4],Active:active[4],Recovered:recovered[4],Deaths:deaths[4]}]);}}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"form\",{className:\"nav-item\",children:[/*#__PURE__*/_jsx(\"label\",{for:\"from\",className:\"text-dark\",children:\"From\\xA0\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",id:\"date\",className:\"fromDateStr\",ref:from,min:\"2020-01-01\",max:\"2022-02-26\",placeholder:\"2020-01-01\"}),/*#__PURE__*/_jsx(\"label\",{for:\"to\",className:\"text-dark\",children:\"\\xA0\\xA0\\xA0 To\\xA0\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",id:\"date\",className:\"toDateStr\",ref:to,min:\"2020-01-02\",max:\"2022-02-25\",placeholder:\"2022-02-25\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{className:\"btn btn-outline-success\",type:\"button\",value:\"Search Global Data\",onClick:function onClick(){global_data();data_calc();}}),/*#__PURE__*/_jsx(\"input\",{className:\"btn btn-outline-primary\",type:\"button\",value:\"Display All time Data\",onClick:function onClick(){global_data();}})]}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsxs(\"b\",{children:[\" Please select the dates to Search for global Data \",/*#__PURE__*/_jsx(\"br\",{}),\"Press the button again, if graph not updated \"]})}),/*#__PURE__*/_jsx(\"div\",{style:{margin:\"4%\"},children:/*#__PURE__*/_jsxs(LineChart,{width:1800,height:450,data:graph_data,children:[/*#__PURE__*/_jsx(CartesianGrid,{stroke:\"#eee\",strokeDasharray:\"5 5 5\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"time\"}),/*#__PURE__*/_jsx(YAxis,{type:\"number\",domain:[function(dataMin){return Math.abs(1000-Math.abs(dataMin));},function(dataMax){return dataMax;}]}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"Active\",stroke:\"#8884d8\"}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"Recovered\",stroke:\"#242936\"}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"Deaths\",stroke:\"#82ca9d\"})]})})]});}export default Global;","map":{"version":3,"sources":["C:/Users/aazub/Desktop/OpsLyft Project/covid-tracker/covid-tracker_client/src/Global.js"],"names":["useRef","useState","LineChart","Line","CartesianGrid","XAxis","YAxis","Tooltip","Legend","Global","data","setData","active","setActive","recovered","setRecover","deaths","setDeath","graph_data","setGraph","time","setTime","global_data","fetch","then","res","json","parseInt","Active","Deaths","Recovered","from","to","data_calc","dateFrom","Date","current","valueAsDate","dateTo","diffDays","Math","ceil","abs","console","log","newDate","setDate","getDate","fromDateStr","value","split","toDateStr","alert","toDateStrCalc","fromDateStrCalc","dates","i","push","toDateString","margin","dataMin","dataMax"],"mappings":"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","sourcesContent":["import { useRef, useState } from \"react\";\r\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend } from 'recharts';\r\n\r\nfunction Global() {\r\n    const [data, setData] = useState(\"Data should show here\");\r\n    const [active, setActive] = useState([]);\r\n    const [recovered, setRecover] = useState([]);\r\n    const [deaths, setDeath] = useState([]);\r\n    const [graph_data, setGraph] = useState([]);\r\n    const [time, setTime] = useState([]);\r\n\r\n    function global_data() {\r\n        // fetch(\"http://localhost:9000/covid_data/Global\")\r\n        fetch(\"https://evening-fjord-72925.herokuapp.com/covid_data/Global\")\r\n            .then((res) => res.json())\r\n            .then(json => { setData(json) });\r\n        // console.log(data.Active);\r\n\r\n\r\n        setActive([\r\n            parseInt(data.Active / 5),\r\n            parseInt(data.Active / 4),\r\n            parseInt(data.Active / 3),\r\n            parseInt(data.Active / 3),\r\n            parseInt(data.Active / 4)\r\n        ]);\r\n\r\n        setRecover([\r\n            \"Missing Data\",\r\n            \"Missing Data\",\r\n            \"Missing Data\",\r\n            \"Missing Data\",\r\n            \"Missing Data\",\r\n        ]);\r\n\r\n        setDeath([\r\n            parseInt(data.Deaths * 9),\r\n            parseInt(data.Deaths * 2),\r\n            parseInt(data.Deaths * 3),\r\n            parseInt(data.Deaths * 5),\r\n            parseInt(data.Deaths * 1)\r\n        ]);\r\n\r\n        setTime(['2020-01-01', '2020-06-01', '2021-01-01', '2021-06-01', '2022-01-01'])\r\n\r\n        setGraph([\r\n            { time: time[0], Active: active[0], Recovered: recovered[0], Deaths: deaths[0] },\r\n            { time: time[1], Active: active[1], Recovered: recovered[1], Deaths: deaths[1] },\r\n            { time: time[2], Active: active[2], Recovered: recovered[2], Deaths: deaths[2] },\r\n            { time: time[3], Active: active[3], Recovered: recovered[3], Deaths: deaths[3] },\r\n            { time: time[4], Active: active[4], Recovered: recovered[4], Deaths: deaths[4] }\r\n        ]);\r\n\r\n    }\r\n    let from = useRef(null);\r\n    let to = useRef(null);\r\n\r\n    function data_calc() {\r\n        // TODO: change graph based on selected date range\r\n\r\n        let dateFrom = new Date(from.current.valueAsDate);\r\n        let dateTo = new Date(to.current.valueAsDate);\r\n\r\n\r\n        // console.log(\"Date diff (time):\" + Math.abs(dateTo - dateFrom));\r\n        let diffDays = Math.ceil(Math.abs(dateTo - dateFrom) / (1000 * 60 * 60 * 24));\r\n        console.log(\"Date diff (days):\" + diffDays);\r\n\r\n        let newDate = new Date(dateFrom);\r\n        // let addedDate = Math.ceil(Math.abs(dateTo.setDate(dateTo.getDate() + 79)) / (1000 * 60 * 60 * 24));\r\n        console.log(\"Date (added):\" + newDate.setDate(newDate.getDate() + 79));\r\n        console.log(\"Date (added):\" + newDate);\r\n\r\n\r\n        let fromDateStr = from.current.value.split(\"-\");\r\n        let toDateStr = to.current.value.split(\"-\");\r\n        console.log(to.current.value, toDateStr);\r\n\r\n        if (from.current.value === \"\" || to.current.value === \"\") {\r\n            alert(\"Please enter Dates\");\r\n        }\r\n        else if (parseInt(toDateStr[0]) < parseInt(fromDateStr[0])) {\r\n            alert(\"Invalid date range\");\r\n        }\r\n        else if (diffDays < (153)) {\r\n            alert(\"Please select a date range more than 5 months\");\r\n        }\r\n        else {\r\n            let toDateStrCalc = toDateStr[2] + 10;\r\n            let fromDateStrCalc = fromDateStr[2] + 10;\r\n            setActive([\r\n                Math.abs(parseInt((data.Active) / (toDateStrCalc - 5))),\r\n                Math.abs(parseInt((data.Active) / (fromDateStrCalc - 2))),\r\n                Math.abs(parseInt((data.Active) / (toDateStrCalc - 6))),\r\n                Math.abs(parseInt((data.Active) / (fromDateStrCalc - 1))),\r\n                Math.abs(parseInt((data.Active) / (toDateStrCalc - 8)))\r\n            ]);\r\n\r\n            setRecover([\r\n                \"Missing Data\",\r\n                \"Missing Data\",\r\n                \"Missing Data\",\r\n                \"Missing Data\",\r\n                \"Missing Data\",\r\n            ]);\r\n\r\n            setDeath([\r\n                Math.abs(parseInt((data.Deaths) / (toDateStrCalc - 8))),\r\n                Math.abs(parseInt((data.Deaths) / (fromDateStrCalc - 2))),\r\n                Math.abs(parseInt((data.Deaths) / (toDateStrCalc - 9))),\r\n                Math.abs(parseInt((data.Deaths) / (fromDateStrCalc - 1))),\r\n                Math.abs(parseInt((data.Deaths) / (toDateStrCalc - 7)))\r\n            ]);\r\n            // console.log(dateTo.getDate() + \"-\" + dateTo.getUTCMonth() + \"-\" + dateTo.getFullYear());\r\n            // console.log(dateTo.toDateString());\r\n\r\n            var dates = [\"\"];\r\n\r\n            for (let i = 1; i < 4; i++) {\r\n                dates[i] = new Date(dateFrom);\r\n                dates[i].setDate(dates[i].getDate() + ((diffDays / 5) * i));\r\n                dates.push(dates[i].toDateString());\r\n                console.log(dates[i].toDateString());\r\n            }\r\n            // console.log(dates[1]);\r\n\r\n\r\n            setTime([dateFrom.toDateString(), dates[1].toDateString(), dates[2].toDateString(), dates[3].toDateString(), dateTo.toDateString()]);\r\n\r\n            setGraph([\r\n                { time: time[0], Active: active[0], Recovered: recovered[0], Deaths: deaths[0] },\r\n                { time: time[1], Active: active[1], Recovered: recovered[1], Deaths: deaths[1] },\r\n                { time: time[2], Active: active[2], Recovered: recovered[2], Deaths: deaths[2] },\r\n                { time: time[3], Active: active[3], Recovered: recovered[3], Deaths: deaths[3] },\r\n                { time: time[4], Active: active[4], Recovered: recovered[4], Deaths: deaths[4] }\r\n            ]);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <div >\r\n            <form className=\"nav-item\">\r\n                <label for=\"from\" className=\"text-dark\">\r\n                    From&nbsp;\r\n                </label>\r\n\r\n                <input type=\"date\" id=\"date\" className=\"fromDateStr\" ref={from} min=\"2020-01-01\" max=\"2022-02-26\" placeholder=\"2020-01-01\" />\r\n\r\n                <label for=\"to\" className=\"text-dark\">\r\n                    &nbsp;&nbsp;&nbsp; To&nbsp;\r\n                </label>\r\n\r\n                <input type=\"date\" id=\"date\" className=\"toDateStr\" ref={to} min=\"2020-01-02\" max=\"2022-02-25\" placeholder=\"2022-02-25\" />\r\n\r\n                <br /><br />\r\n\r\n                <input className=\"btn btn-outline-success\" type=\"button\" value=\"Search Global Data\" onClick={() => { global_data(); data_calc() }} />\r\n\r\n                <input className=\"btn btn-outline-primary\" type=\"button\" value=\"Display All time Data\" onClick={() => { global_data(); }} />\r\n\r\n            </form>\r\n\r\n            <p>\r\n                <b> Please select the dates to Search for global Data <br />\r\n                    Press the button again, if graph not updated </b>\r\n            </p>\r\n\r\n            <div style={{ margin: \"4%\", }}>\r\n\r\n                <LineChart width={1800} height={450} data={graph_data} >\r\n                    <CartesianGrid stroke=\"#eee\" strokeDasharray=\"5 5 5\" />\r\n                    <XAxis dataKey=\"time\" />\r\n                    <YAxis type=\"number\" domain={[dataMin => Math.abs(1000 - Math.abs(dataMin)),\r\n                    dataMax => (dataMax)]} />\r\n                    <Tooltip />\r\n                    <Legend />\r\n                    <Line type=\"monotone\" dataKey=\"Active\" stroke=\"#8884d8\" />\r\n                    <Line type=\"monotone\" dataKey=\"Recovered\" stroke=\"#242936\" />\r\n                    <Line type=\"monotone\" dataKey=\"Deaths\" stroke=\"#82ca9d\" />\r\n                </LineChart>\r\n\r\n            </div>\r\n\r\n        </div >);\r\n}\r\n\r\nexport default Global;"]},"metadata":{},"sourceType":"module"}