{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aazub\\\\Desktop\\\\OpsLyft Project\\\\covid-tracker\\\\covid-tracker_client\\\\src\\\\Global.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Bar } from 'react-chartjs-2'; // import { Chart as ChartJS, registerables } from 'chart.js';\n// import { Chart } from 'react-chartjs-2'\n// ChartJS.register(...registerables);\n\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Global() {\n  _s();\n\n  const [data, setData] = useState(\"Data should show here\");\n\n  function global_data() {\n    fetch(\"http://localhost:9000/covid_data/Global\").then(res => res.json()).then(json => {\n      setData(json);\n    });\n  }\n\n  const graph_data = [{\n    time: ['1st January 2020', 'Page B', 'Page C'],\n    active: data.Active,\n    recovered: data.Recovered,\n    deaths: data.Deaths\n  }]; // const graphState = {\n  //     labels: ['Active', 'Recovered', 'Deceased'],\n  //     datasets: [\n  //         {\n  //             label: 'Covid',\n  //             backgroundColor: [\n  //                 '#B21F00',\n  //                 '#C9DE00',\n  //                 '#2FDE00',\n  //                 // '#00A6B4',\n  //                 // '#6800B4'\n  //             ],\n  //             hoverBackgroundColor: [\n  //                 '#501800',\n  //                 '#4B5000',\n  //                 '#175000',\n  //                 // '#003350',\n  //                 // '#35014F'\n  //             ],\n  //             data: [data.Active, data.Recovered, data.Deaths]\n  //         }\n  //     ]\n  // }\n  // const state = {\n  //     labels: ['Active', 'Recovered', 'Deceased'],\n  //     datasets: [\n  //         {\n  //             label: 'Covid',\n  //             backgroundColor: 'rgba(75,192,192,1)',\n  //             borderColor: 'rgba(0,0,0,1)',\n  //             borderWidth: 2,\n  //             data: [data.Active, data.Recovered, data.Deaths]\n  //         }\n  //     ]\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"from\",\n        className: \"text-dark\",\n        children: \"From\\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"date\",\n        name: \"birthday\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"to\",\n        className: \"text-dark\",\n        children: \"\\xA0\\xA0\\xA0 To\\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"date\",\n        name: \"birthday\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-outline-success\",\n      type: \"submit\",\n      onClick: global_data,\n      children: \"Search Global Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Active: \", data.Active, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 39\n      }, this), \"Recovered: \", data.Recovered, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 45\n      }, this), \"Deaths: \", data.Deaths, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"800px\",\n        marginLeft: \"37%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          width: 500,\n          height: 300,\n          data: graph_data,\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n            stroke: \"#eee\",\n            strokeDasharray: \"5 5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"active\",\n            stroke: \"#8884d8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"recovered\",\n            stroke: \"#82ca9d\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"deaths\",\n            stroke: \"#82ca9d\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Global, \"kHn6x5ZlSwi1AykJze/Yc/ZxUWs=\");\n\n_c = Global;\nexport default Global;\n\nvar _c;\n\n$RefreshReg$(_c, \"Global\");","map":{"version":3,"sources":["C:/Users/aazub/Desktop/OpsLyft Project/covid-tracker/covid-tracker_client/src/Global.js"],"names":["useState","Bar","LineChart","Line","CartesianGrid","XAxis","YAxis","Global","data","setData","global_data","fetch","then","res","json","graph_data","time","active","Active","recovered","Recovered","deaths","Deaths","width","marginLeft"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport { Bar } from 'react-chartjs-2';\r\n// import { Chart as ChartJS, registerables } from 'chart.js';\r\n// import { Chart } from 'react-chartjs-2'\r\n// ChartJS.register(...registerables);\r\n\r\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis } from 'recharts';\r\n\r\n\r\n\r\nfunction Global() {\r\n\r\n    const [data, setData] = useState(\"Data should show here\");\r\n\r\n    function global_data() {\r\n        fetch(\"http://localhost:9000/covid_data/Global\")\r\n            .then((res) => res.json())\r\n            .then(json => { setData(json) });\r\n    }\r\n\r\n\r\n\r\n    const graph_data = [{ time: ['1st January 2020', 'Page B', 'Page C'], active: data.Active, recovered: data.Recovered, deaths: data.Deaths }];\r\n\r\n\r\n    // const graphState = {\r\n    //     labels: ['Active', 'Recovered', 'Deceased'],\r\n    //     datasets: [\r\n    //         {\r\n    //             label: 'Covid',\r\n    //             backgroundColor: [\r\n    //                 '#B21F00',\r\n    //                 '#C9DE00',\r\n    //                 '#2FDE00',\r\n    //                 // '#00A6B4',\r\n    //                 // '#6800B4'\r\n    //             ],\r\n    //             hoverBackgroundColor: [\r\n    //                 '#501800',\r\n    //                 '#4B5000',\r\n    //                 '#175000',\r\n    //                 // '#003350',\r\n    //                 // '#35014F'\r\n    //             ],\r\n    //             data: [data.Active, data.Recovered, data.Deaths]\r\n    //         }\r\n    //     ]\r\n    // }\r\n\r\n    // const state = {\r\n    //     labels: ['Active', 'Recovered', 'Deceased'],\r\n    //     datasets: [\r\n    //         {\r\n    //             label: 'Covid',\r\n    //             backgroundColor: 'rgba(75,192,192,1)',\r\n    //             borderColor: 'rgba(0,0,0,1)',\r\n    //             borderWidth: 2,\r\n    //             data: [data.Active, data.Recovered, data.Deaths]\r\n    //         }\r\n    //     ]\r\n    // }\r\n\r\n\r\n    return (\r\n\r\n        <div >\r\n            <div className=\"nav-item\">\r\n                <label for=\"from\" className=\"text-dark\">\r\n                    From&nbsp;\r\n                </label>\r\n                <input type=\"date\" id=\"date\" name=\"birthday\" />\r\n\r\n                <label for=\"to\" className=\"text-dark\">\r\n                    &nbsp;&nbsp;&nbsp; To&nbsp;\r\n                </label>\r\n                <input type=\"date\" id=\"date\" name=\"birthday\" />\r\n            </div>\r\n\r\n            <br />\r\n\r\n            <button className=\"btn btn-outline-success\" type=\"submit\" onClick={global_data}>Search Global Data</button>\r\n\r\n            <p>\r\n                Active: {data.Active} <br />\r\n                Recovered: {data.Recovered} <br />\r\n                Deaths: {data.Deaths} <br />\r\n            </p>\r\n\r\n\r\n            <div style={{ width: \"800px\", marginLeft: \"37%\" }}>\r\n                {/* <div > */}\r\n                {/* <Pie\r\n                    data={graphState}\r\n                    options={{\r\n                        title: {\r\n                            display: true,\r\n                            text: 'Average Rainfall per month',\r\n                            fontSize: 20\r\n                        },\r\n                        legend: {\r\n                            display: true,\r\n                            position: 'right'\r\n                        }\r\n                    }}\r\n                /> */}\r\n\r\n                {/* <Doughnut\r\n                    data={graphState}\r\n                    options={{\r\n                        title: {\r\n                            display: true,\r\n                            text: 'Covid Global data',\r\n                            fontSize: 50\r\n                        },\r\n                        legend: {\r\n                            display: true,\r\n                            position: 'center'\r\n                        }\r\n                    }}\r\n                /> */}\r\n                {/* <Bar\r\n                        data={state}\r\n                        options={{\r\n                            title: {\r\n                                display: true,\r\n                                text: 'Global Covid Data',\r\n                                fontSize: 50\r\n                            },\r\n                            legend: {\r\n                                display: true,\r\n                                position: 'right'\r\n                            }\r\n                        }}\r\n                    /> */}\r\n\r\n                <div>\r\n                    {/* <LineChart width={600} height={300} data={graph_data}>\r\n                        <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" />\r\n                        <CartesianGrid stroke=\"#ccc\" />\r\n                        <XAxis dataKey=\"name\" />\r\n                        <YAxis />\r\n                    </LineChart> */}\r\n\r\n                    <LineChart width={500} height={300} data={graph_data}>\r\n                        <XAxis dataKey=\"time\" />\r\n                        <YAxis />\r\n                        <CartesianGrid stroke=\"#eee\" strokeDasharray=\"5 5\" />\r\n                        <Line type=\"monotone\" dataKey=\"active\" stroke=\"#8884d8\" />\r\n                        <Line type=\"monotone\" dataKey=\"recovered\" stroke=\"#82ca9d\" />\r\n                        <Line type=\"monotone\" dataKey=\"deaths\" stroke=\"#82ca9d\" />\r\n                    </LineChart>\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        </div>);\r\n}\r\n\r\nexport default Global;"]},"metadata":{},"sourceType":"module"}