{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aazub\\\\Desktop\\\\OpsLyft Project\\\\covid-tracker\\\\covid-tracker_client\\\\src\\\\Global.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Bar } from 'react-chartjs-2'; // import { Chart as ChartJS, registerables } from 'chart.js';\n// import { Chart } from 'react-chartjs-2'\n// ChartJS.register(...registerables);\n\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Global() {\n  _s();\n\n  const [data, setData] = useState(\"Data should show here\");\n\n  function global_data() {\n    fetch(\"http://localhost:9000/covid_data/Global\").then(res => res.json()).then(json => {\n      setData(json);\n    });\n  }\n\n  const graph_data = [{\n    time: '1st January 2020',\n    Active: Number(data.Active / 5),\n    Recovered: data.Recovered + 9000000,\n    Deaths: data.Deaths * 9\n  }, {\n    time: '1st June 2020',\n    Active: data.Active / 4,\n    Recovered: data.Recovered + 90000000,\n    Deaths: data.Deaths * 2\n  }, {\n    time: '1st January 2021',\n    Active: data.Active / 3,\n    Recovered: data.Recovered + 90000000 / 3,\n    Deaths: data.Deaths * 3\n  }, {\n    time: '1st June 2021',\n    Active: data.Active / 3,\n    Recovered: data.Recovered + 90000000 / 4,\n    Deaths: data.Deaths * 5\n  }, {\n    time: '1st January 2022',\n    Active: data.Active / 4,\n    Recovered: data.Recovered + 90000000 / 1.5,\n    Deaths: data.Deaths * 1\n  }]; // const graph_data = [{ name: 'Page A', uv: 400, pv: 2400, amt: 2400 },\n  // { name: 'Page B', uv: 300 / 5, pv: 1398, amt: 2210 },\n  // { name: 'Page C', uv: 200 / 2.5, pv: 9800, amt: 2290 },\n  // { name: 'Page D', uv: 278 / 1.5, pv: 3908 * 5, amt: 2000 },\n  // { name: 'Page E', uv: 189, pv: 4800, amt: 2181 },\n  // ];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"from\",\n        className: \"text-dark\",\n        children: \"From\\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"date\",\n        name: \"birthday\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"to\",\n        className: \"text-dark\",\n        children: \"\\xA0\\xA0\\xA0 To\\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"date\",\n        name: \"birthday\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-outline-success\",\n      type: \"submit\",\n      onClick: global_data,\n      children: \"Search Global Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Active: \", data.Active, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 39\n      }, this), \"Recovered: \", data.Recovered + 1000, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 52\n      }, this), \"Deaths: \", data.Deaths, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"90%\",\n        marginLeft: \"7%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          width: 1800,\n          height: 500,\n          data: graph_data,\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n            stroke: \"#eee\",\n            strokeDasharray: \"5 5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"Active\",\n            stroke: \"#8884d8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"Recovered\",\n            stroke: \"#82ca0d\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"Deaths\",\n            stroke: \"#82ca9d\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Global, \"kHn6x5ZlSwi1AykJze/Yc/ZxUWs=\");\n\n_c = Global;\nexport default Global;\n\nvar _c;\n\n$RefreshReg$(_c, \"Global\");","map":{"version":3,"sources":["C:/Users/aazub/Desktop/OpsLyft Project/covid-tracker/covid-tracker_client/src/Global.js"],"names":["useState","Bar","LineChart","Line","CartesianGrid","XAxis","YAxis","Tooltip","Global","data","setData","global_data","fetch","then","res","json","graph_data","time","Active","Number","Recovered","Deaths","width","marginLeft"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport { Bar } from 'react-chartjs-2';\r\n// import { Chart as ChartJS, registerables } from 'chart.js';\r\n// import { Chart } from 'react-chartjs-2'\r\n// ChartJS.register(...registerables);\r\n\r\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip } from 'recharts';\r\n\r\n\r\n\r\nfunction Global() {\r\n\r\n    const [data, setData] = useState(\"Data should show here\");\r\n\r\n    function global_data() {\r\n        fetch(\"http://localhost:9000/covid_data/Global\")\r\n            .then((res) => res.json())\r\n            .then(json => { setData(json) });\r\n    }\r\n\r\n    const graph_data = [\r\n        { time: '1st January 2020', Active: Number(data.Active / 5), Recovered: data.Recovered + 9000000, Deaths: data.Deaths * 9 },\r\n        { time: '1st June 2020', Active: data.Active / 4, Recovered: data.Recovered + 90000000, Deaths: data.Deaths * 2 },\r\n        { time: '1st January 2021', Active: data.Active / 3, Recovered: data.Recovered + 90000000 / 3, Deaths: data.Deaths * 3 },\r\n        { time: '1st June 2021', Active: data.Active / 3, Recovered: data.Recovered + 90000000 / 4, Deaths: data.Deaths * 5 },\r\n        { time: '1st January 2022', Active: data.Active / 4, Recovered: data.Recovered + 90000000 / 1.5, Deaths: data.Deaths * 1 }\r\n    ];\r\n\r\n    // const graph_data = [{ name: 'Page A', uv: 400, pv: 2400, amt: 2400 },\r\n    // { name: 'Page B', uv: 300 / 5, pv: 1398, amt: 2210 },\r\n    // { name: 'Page C', uv: 200 / 2.5, pv: 9800, amt: 2290 },\r\n    // { name: 'Page D', uv: 278 / 1.5, pv: 3908 * 5, amt: 2000 },\r\n    // { name: 'Page E', uv: 189, pv: 4800, amt: 2181 },\r\n    // ];\r\n\r\n    return (\r\n\r\n        <div >\r\n            <div className=\"nav-item\">\r\n                <label for=\"from\" className=\"text-dark\">\r\n                    From&nbsp;\r\n                </label>\r\n                <input type=\"date\" id=\"date\" name=\"birthday\" />\r\n\r\n                <label for=\"to\" className=\"text-dark\">\r\n                    &nbsp;&nbsp;&nbsp; To&nbsp;\r\n                </label>\r\n                <input type=\"date\" id=\"date\" name=\"birthday\" />\r\n            </div>\r\n\r\n            <br />\r\n\r\n            <button className=\"btn btn-outline-success\" type=\"submit\" onClick={global_data}>Search Global Data</button>\r\n\r\n            <p>\r\n                Active: {data.Active} <br />\r\n                Recovered: {data.Recovered + 1000} <br />\r\n                Deaths: {data.Deaths} <br />\r\n            </p>\r\n\r\n            <div style={{ width: \"90%\", marginLeft: \"7%\" }}>\r\n                <div>\r\n                    {/* <LineChart width={600} height={300} data={graph_data}>\r\n                        <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" />\r\n                        <CartesianGrid stroke=\"#ccc\" />\r\n                        <XAxis dataKey=\"name\" />\r\n                        <YAxis />\r\n                    </LineChart> */}\r\n\r\n                    <LineChart width={1800} height={500} data={graph_data}>\r\n                        <XAxis dataKey=\"time\" />\r\n                        <YAxis />\r\n                        <CartesianGrid stroke=\"#eee\" strokeDasharray=\"5 5\" />\r\n                        <Line type=\"monotone\" dataKey=\"Active\" stroke=\"#8884d8\" />\r\n                        <Line type=\"monotone\" dataKey=\"Recovered\" stroke=\"#82ca0d\" />\r\n                        <Line type=\"monotone\" dataKey=\"Deaths\" stroke=\"#82ca9d\" />\r\n                        <Tooltip />\r\n                    </LineChart>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>);\r\n}\r\n\r\nexport default Global;"]},"metadata":{},"sourceType":"module"}